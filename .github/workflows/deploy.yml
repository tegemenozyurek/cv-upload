name: Deploy to AWS S3 + CloudFront

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run build
      env:
        VITE_S3_BUCKET: ${{ secrets.S3_BUCKET }}
        VITE_S3_REGION: ${{ secrets.S3_REGION }}
        VITE_S3_PREFIX: ${{ secrets.S3_PREFIX }}
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    
    - name: Deploy to S3
      run: |
        # Upload all files
        aws s3 sync dist/ s3://${{ secrets.S3_BUCKET }} --delete
        
        # Set proper cache headers for HTML files
        aws s3 cp s3://${{ secrets.S3_BUCKET }}/index.html s3://${{ secrets.S3_BUCKET }}/index.html \
          --metadata-directive REPLACE \
          --cache-control "no-cache, no-store, must-revalidate" \
          --content-type "text/html"
        
        # Set cache headers for static assets
        aws s3 cp s3://${{ secrets.S3_BUCKET }}/assets/ s3://${{ secrets.S3_BUCKET }}/assets/ \
          --recursive \
          --metadata-directive REPLACE \
          --cache-control "max-age=31536000" \
          --exclude "*" \
          --include "*.js" \
          --include "*.css"
    
    - name: Invalidate CloudFront
      if: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
      run: |
        aws cloudfront create-invalidation \
          --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
          --paths "/*"
    
    - name: Deployment Summary
      run: |
        echo "üöÄ Deployment completed successfully!"
        echo "üì¶ S3 Bucket: ${{ secrets.S3_BUCKET }}"
        echo "üåç Region: ${{ secrets.AWS_REGION }}"
        if [ -n "${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}" ]; then
          echo "‚òÅÔ∏è  CloudFront Distribution: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}"
        fi
